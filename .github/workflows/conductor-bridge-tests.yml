name: CONDUCTOR BRIDGE TESTS SUITE

on:
  schedule:
      - cron: '0 2 */5 * *' #¬†for sprint
      - cron: '0 3 */5 * *' # for staging

  push:
    branches:
      - 'sprint-*'
      - 'staging'
  workflow_dispatch:
    inputs:
      zchain-branch:
        description: 'Branch for 0chain repo - leave blank to use sprint branch'
        required: false
        type: string
        default: ''
      blobber-branch:
        description: 'Branch for blobber repo - leave blank to use sprint branch'
        required: false
        type: string
        default: ''
      authorizer-branch:
        description: 'Branch for authorizer repo - leave blank to use sprint branch'
        required: false
        type: string
        default: ''
      zbox-branch:
        description: 'Branch for 0box repo - leave blank to use sprint branch'
        required: false
        type: string
        default: ''
      zboxcli-branch:
        description: 'Branch for zboxcli repo - leave blank to use sprint branch'
        required: false
        type: string
        default: ''
      zwalletcli-branch:
        description: 'Branch for zwalletcli repo - leave blank to use sprint branch'
        required: false
        type: string
        default: ''
      
jobs:
  # Succeeds if the event is scheduled for staging
  scheduled-staging-branches:
    runs-on: [self-hosted, arc-runner]
    if: github.event.schedule == '0 1 * * *'
    steps:
      - name: "Success"
        run: exit 0

  compute-branches:
    needs: scheduled-staging-branches
    if: always()
    runs-on: [self-hosted, arc-runner]
    steps:
      - name: "Compute Branches based on event"
        id: "compute_branches"
        run: |
          ZCHAIN_BRANCH=""
          BLOBBER_BRANCH=""
          AUTHORIZER_BRANCH=""
          ZBOX_BRANCH=""
          ZBOXCLI_BRANCH=""
          ZWALLETCLI_BRANCH=""

          echo "Running from ${{ github.event_name }} event"
          if [[ "${{ github.event_name }}" = "workflow_dispatch" ]]; then
          
            ZCHAIN_BRANCH="${{ github.event.inputs.zchain-branch }}"
            BLOBBER_BRANCH="${{ github.event.inputs.blobber-branch }}"
            AUTHORIZER_BRANCH="${{ github.event.inputs.authorizer-branch }}"
            ZBOX_BRANCH="${{ github.event.inputs.zbox-branch }}"
            ZBOXCLI_BRANCH="${{ github.event.inputs.zboxcli-branch }}"
            ZWALLETCLI_BRANCH="${{ github.event.inputs.zwalletcli-branch }}"
          
          elif [[ "${{ github.event_name }}" = "push" && "${{github.event.ref}}" = "refs/heads/staging" || "${{ needs.scheduled-staging-branches.result}}" = "success" ]]; then
            ZCHAIN_BRANCH="staging"
            BLOBBER_BRANCH="staging"
            AUTHORIZER_BRANCH="staging"
            ZBOX_BRANCH="staging"
            ZBOXCLI_BRANCH="staging"
            ZWALLETCLI_BRANCH="staging"
          fi

          echo "ZCHAIN_BRANCH = $ZCHAIN_BRANCH\n"
          echo "BLOBBER_BRANCH = $BLOBBER_BRANCH\n"
          echo "AUTHORIZER_BRANCH = $AUTHORIZER_BRANCH\n"
          echo "ZBOX_BRANCH = $ZBOX_BRANCH\n"
          echo "ZBOXCLI_BRANCH = $ZBOXCLI_BRANCH\n"
          echo "ZWALLETCLI_BRANCH = $ZWALLETCLI_BRANCH\n"

          echo "zchain_branch=$ZCHAIN_BRANCH" >> "$GITHUB_OUTPUT"
          echo "blobber_branch=$BLOBBER_BRANCH" >> "$GITHUB_OUTPUT"
          echo "authorizer_branch=$AUTHORIZER_BRANCH" >> "$GITHUB_OUTPUT"
          echo "zbox_branch=$ZBOX_BRANCH" >> "$GITHUB_OUTPUT"
          echo "zboxcli_branch=$ZBOXCLI_BRANCH" >> "$GITHUB_OUTPUT"
          echo "zwalletcli_branch=$ZWALLETCLI_BRANCH" >> "$GITHUB_OUTPUT"

    outputs:
      zchain_branch: ${{ steps.compute_branches.outputs.zchain_branch }}
      blobber_branch: ${{ steps.compute_branches.outputs.blobber_branch }}
      authorizer_branch: ${{ steps.compute_branches.outputs.authorizer_branch }}
      zbox_branch: ${{ steps.compute_branches.outputs.zbox_branch }}
      zboxcli_branch: ${{ steps.compute_branches.outputs.zboxcli_branch }}
      zwalletcli_branch: ${{ steps.compute_branches.outputs.zwalletcli_branch }}
  
  authorizers-standard:
    needs: compute-branches
    if: always() && needs.compute-branches.result == 'success'
    uses: 0chain/0chain/.github/workflows/conductor-authorizer-tests.yml@staging
    with:
      chain_branch: ${{ needs.compute-branches.outputs.zchain_branch }}
      auth_branch: ${{ needs.compute-branches.outputs.authorizer_branch }}
      zboxcli_branch: ${{ needs.compute-branches.outputs.zboxcli_branch }}
      zwalletcli_branch: ${{ needs.compute-branches.outputs.zwalletcli_branch }}
    secrets:
      inherit
  
  node-recovery-03:
    needs: compute-branches
    if: always() && needs.compute-branches.result == 'success'
    uses: 0chain/0chain/.github/workflows/conductor-node-recovery-03-tests.yml@staging
    with:
      chain_branch: ${{ needs.compute-branches.outputs.zchain_branch }}
      auth_branch: ${{ needs.compute-branches.outputs.authorizer_branch }}
      zboxcli_branch: ${{ needs.compute-branches.outputs.zboxcli_branch }}
      zwalletcli_branch: ${{ needs.compute-branches.outputs.zwalletcli_branch }}
      zbox_branch: ${{ needs.compute-branches.outputs.zbox_branch }}
    secrets:
      inherit

  notify_slack:
    runs-on: [self-hosted, arc-runner]
    needs: [compute-branches, authorizers-standard, node-recovery-03]
    if: always()
    steps:
      - name: "Notify Slack"
        run: |
          ZCHAIN_BRANCH=$([ -z "${{ needs.compute-branches.outputs.zchain_branch }}" ] && echo "sprint" || echo "${{ needs.compute-branches.outputs.zchain_branch }}")
          BLOBBER_BRANCH=$([ -z "${{ needs.compute-branches.outputs.blobber_branch }}" ] && echo "sprint" || echo "${{ needs.compute-branches.outputs.blobber_branch }}")
          AUTHORIZER_BRANCH=$([ -z "${{ needs.compute-branches.outputs.authorizer_branch }}" ] && echo "sprint" || echo "${{ needs.compute-branches.outputs.authorizer_branch }}")
          ZBOX_BRANCH=$([ -z "${{ needs.compute-branches.outputs.zbox_branch }}" ] && echo "sprint" || echo "${{ needs.compute-branches.outputs.zbox_branch }}")
          ZBOXCLI_BRANCH=$([ -z "${{ needs.compute-branches.outputs.zboxcli_branch }}" ] && echo "sprint" || echo "${{ needs.compute-branches.outputs.zboxcli_branch }}")
          ZWALLETCLI_BRANCH=$([ -z "${{ needs.compute-branches.outputs.zwalletcli_branch }}" ] && echo "sprint" || echo "${{ needs.compute-branches.outputs.zwalletcli_branch }}")

          PASSED_TEXT="PASSED ‚úÖ"
          FAILED_TEXT="FAILED ‚ö†Ô∏è"
          PASSED_COLOR="#22bb33"
          FAILED_COLOR="#ff0000"

          AUTHORIZER_STATUS=$([ "${{ needs.authorizers-standard.result }}" = "success" ] && echo "$PASSED_TEXT" || echo "$FAILED_TEXT")
          AUTHORIZER_COLOR=$([ "${{ needs.authorizers-standard.result }}" = "success" ] && echo "$PASSED_COLOR" || echo "$FAILED_COLOR")
               
          NODE_RECOVERY_03_STATUS=$([ "${{ needs.node-recovery-03.result }}" = "success" ] && echo "$PASSED_TEXT" || echo "$FAILED_TEXT")
          NODE_RECOVERY_03_COLOR=$([ "${{ needs.node-recovery-03.result }}" = "success" ] && echo "$PASSED_COLOR" || echo "$FAILED_COLOR")

          payload="{
            \"text\": \"*üìù CONDUCTOR TESTING RESULTS üìù*\nüêô Branches: 0chain ($ZCHAIN_BRANCH) - blobber ($BLOBBER_BRANCH) - authorizer ($AUTHORIZER_BRANCH) - 0box ($ZBOX_BRANCH) - zboxcli ($ZBOXCLI_BRANCH) - zwalletcli ($ZWALLETCLI_BRANCH) \n‚öôÔ∏è Github run: https://github.com/0chain/0chain/actions/runs/${{ github.run_id }}\n\",
          \"attachments\": [
              {
              \"text\": \"CONDUCTOR AUTHORIZER TEST $AUTHORIZER_STATUS\",
              \"color\": \"$AUTHORIZER_COLOR\"
              },
              {
              \"text\": \"CONDUCTOR NODE RECOVERY TEST 03 $NODE_RECOVERY_03_STATUS\",
              \"color\": \"$NODE_RECOVERY_03_COLOR\"
              }
          ]
          }"
          curl -X POST -H 'Content-type: application/json' --data "${payload}" ${{ secrets.DEVOPS_CHANNEL_WEBHOOK_URL }}
